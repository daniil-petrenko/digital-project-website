$base-font-size: 16px;

html, body {
	font-size: $base-font-size;
}

// Body
body {
	font-family:	$fontMain, 'sans-serif';
}

// Wrapper style
[class*="__container"] {
  max-width: ($containerWidth + $containerPadding) + px;
  margin: 0 auto;
  padding: 0 $containerSidePadding + px;
	@media (max-width: $md1) {
		max-width: 1200;
	}
	@media (max-width: $md2) {
		max-width: 970px;
	}
	@media (max-width: $md3) {
		max-width: 740px;
	}
	@media (max-width: $md4) {
		max-width: none;
	}
}

._ibg {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
  position: relative;
}
._ibg img {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

.wrapper {
  min-height: 100%;
  overflow: clip;
  display: flex;
  flex-direction: column;
}
.page {
  flex: 1 1 auto;
  // padding: 40px 0 0 0;
}

.title {
	font-weight: 300;
	font-size: rem(64);
	line-height: 100%;
	color: $grayColor;
	@media (max-width: $md3) {
		font-size: rem(54);
	}
	@media (max-width: $md4) {
		font-size: rem(42);
	}
	&_black {
		font-weight: 700;
		color: $mainColor;
	}
}

.slider-arrows {
	display: flex;
	gap: rem(23);
}
.slider-arrow {
	border: 1px solid #f2f2f2;
	cursor: pointer;
	padding: rem(15);
	transition: background-color 0.3s ease;
	@media (any-hover: hover) {
		&:hover {
			background-color: #f9f9f9;
		}
	}
	@media (max-width: em(652)) {
		padding: rem(25);
	}
}
.slider-arrow-prev {
	transform: rotate(180deg);
}
.slider-arrow-next {

}
.swiper-button-disabled {
	background-color: #f9f9f9;
}

.pagination {
	display: flex;
	gap: rem(32);
	font-size: rem(24);
	line-height: 100%;
	color: $grayColor;
	position: relative;
	text-align: left;
	top: 0;
	left: 0;

}

.input_error {
	border: rem(1) solid red;
}

.lg-sub-html {
	visibility: hidden;
	opacity: 0;
}
.lg-next, .lg-prev {
	&::before {
		@extend %ic;
		content: "\e906";
		font-size: 40px;
	}
}
.lg-prev {
	transform: rotate(180deg);
	&::after {
		content: "";
	}
}

.form {
	margin-top: rem(20);
	@media (min-width: $md3) {
			flex: 0 1 percent(391, 1170);
		}
	@media (max-width: $md3) {
		width: 100%;
	}
	&__item {
		position: relative; // <= for label animation

		&:not(:last-child) {
			margin-bottom: rem(24);
		}
		textarea {
			height: rem(147);
			padding-top: rem(14);
			resize: none;

		}
 	}
 	&__label {
 		position: absolute;
	  left: rem(10);
	  transform: translateY(115%);
	  padding: 0 rem(5);
	  color: #8d8d8d;
	  transition: all 0.5s ease;
	  pointer-events: none;

	  font-size: rem(14);
 		display: inline-block;
 	}
	&__input {
		height: rem(46);
		letter-spacing: 0.04em;
		color: #8d8d8d;
		background-color: #f3f3f3;

		padding: rem(0) rem(0) rem(0) rem(21);
		font-size: rem(14);
		width: 100%;
		outline: none;
	}
	&__error {
		color: red;
		font-size: rem(12);
		padding: rem(2) 0 0 rem(12);
	}
	&__button {
		display: flex;
		align-items: center;
		padding: rem(24) rem(48);
		font-size: rem(12);
		line-height: 100%;
		letter-spacing: 0.2em;
		text-transform: uppercase;
		color: $whiteColor;
		background-color: $mainColor;
		@include adaptivValue('margin-top', 77, 15, 1);
		@media (max-width: $md4) {
			justify-content: center;
			width: 100%;
		}
		&::after {
			@extend %ic;
			content: "\e906";
			font-size: rem(25);
			padding-left: rem(12);
			transition: transform 0.5s ease;
		}
		&:hover {
			&::after {
				transform: translate(rem(10));
			}
		}
	}
	&__checkbox-label {
		display: flex;
		gap: rem(16);
		font-size: rem(14);
		letter-spacing: 0.03em;
		color: $mainColor;
	}
	&__checkbox {
	}
}

// for label animation
input:focus + label,
textarea:focus + label,
input:not(:placeholder-shown) + label,
textarea:not(:placeholder-shown) + label {
  transform: translateY(-150%);
  left: 0;
  font-size: rem(12);
  color: #8d8d8d;
}
.real-checkbox {
	width: 0;
	height: 0;
	opacity: 0;
	position: absolute;
	z-index: -1;

}
.real-checkbox:focus + .custom-checkbox {
	box-shadow: 0px 0px 0px 1px rgba(0,0,0,0.6), 0px 0px 10px #f2f2f2;
}
.custom-checkbox {
	position: relative;
	display: inline-block;
	border-radius: rem(4);
	min-width: rem(24);
	height: rem(24);
	box-shadow: inset 0 0 0 0 rgba(0,0,0,0.6);
	background: #f3f3f3;
	&::before {
		content: '';
		width: rem(13);
		height: rem(9);
		background: url('../img/check.svg');
		background-size: contain;
		background-repeat: no-repeat;

		position: absolute;
		left: 50%;
		top: 50%;
		transform: translate(-50%, -50%) scale(0);
		margin-top: rem(1);

		transition: 0.3s all ease;
	}
}

.real-checkbox:checked + .custom-checkbox::before {
	transform: translate(-50%, -50%) scale(1);
}
.required {
  color: #c30000;
  margin-left: rem(5);
}

// =============

// Animations
// Fade
@keyframes fade {
	0% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}
}